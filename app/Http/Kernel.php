<?php

namespace App\Http;

use Illuminate\Foundation\Http\Kernel as HttpKernel;

class Kernel extends HttpKernel
{
    // ğŸ”¹ Middleware global appliquÃ© Ã  toutes les requÃªtes HTTP (web et API)
    protected $middleware = [
        \App\Http\Middleware\TrustProxies::class, // GÃ¨re les proxys (ex: load balancer)
        \Illuminate\Http\Middleware\HandleCors::class, // Autorise les requÃªtes CORS (frontend â†” backend)
        \App\Http\Middleware\PreventRequestsDuringMaintenance::class, // Bloque les requÃªtes pendant la maintenance
        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class, // Limite la taille des requÃªtes POST
        \App\Http\Middleware\TrimStrings::class, // Supprime les espaces en dÃ©but/fin des champs texte
        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class, // Convertit les chaÃ®nes vides en null
    ];

    // ğŸ”¹ Middleware groupÃ©s selon le type de requÃªte : 'web' ou 'api'
    protected $middlewareGroups = [
        'web' => [
            \App\Http\Middleware\EncryptCookies::class, // Chiffre les cookies
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class, // Ajoute les cookies Ã  la rÃ©ponse
            \Illuminate\Session\Middleware\StartSession::class, // DÃ©marre la session utilisateur
            \Illuminate\View\Middleware\ShareErrorsFromSession::class, // Partage les erreurs avec les vues Blade
            \App\Http\Middleware\VerifyCsrfToken::class, // ProtÃ¨ge contre les attaques CSRF
            \Illuminate\Routing\Middleware\SubstituteBindings::class, // Injecte automatiquement les modÃ¨les via les routes
        ],

        'api' => [
            \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class, // GÃ¨re lâ€™authentification avec Sanctum
            \Illuminate\Routing\Middleware\ThrottleRequests::class.':api', // Limite le nombre de requÃªtes (anti-spam)
            \Illuminate\Routing\Middleware\SubstituteBindings::class, // Injection des modÃ¨les pour les routes API
        ],
    ];

    // ğŸ”¹ Middleware que tu peux appeler individuellement dans les routes (ex: ->middleware('auth'))
    protected $routeMiddleware = [
        'auth' => \App\Http\Middleware\Authenticate::class, // VÃ©rifie que lâ€™utilisateur est connectÃ©
        'role' => \App\Http\Middleware\CheckRole::class, // âœ… VÃ©rifie le rÃ´le (Product Owner, Scrum Master, etc.)
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class, // VÃ©rifie que lâ€™e-mail est vÃ©rifiÃ©
    ];
}
